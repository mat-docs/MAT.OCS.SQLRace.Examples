name: PR gated build
on:
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 12 * * *'

jobs:
  build:
    runs-on: windows-latest
    env:
      Solution_Name: MAT.OCS.SQLRace.Examples.sln
      PackagesUserName: ${{ secrets.PACKAGES_USERNAME }}
      PackagesPatToken: ${{ secrets.PACKAGES_PATTOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Check latest available package
        shell: pwsh
        run: |
          nuget sources Add -Name "McLaren Applied GitHub Packages" -Source https://nuget.pkg.github.com/mat-docs/index.json -UserName $env:PackagesUserName -Password $env:PackagesPatToken
          $Uri = "https://api.github.com/orgs/mat-docs/packages/nuget/MESL.SQLRace.API/versions"
          $Headers = @{Authorization = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$env:PackagesUserName:$env:PackagesPatToken")) }
          $Method = "GET"
          $packageVersions = Invoke-RestMethod -Uri $Uri -Headers $Headers -Method $Method
          $sortedPackages = $packageVersions.name | Where { $_ -match "^[-]?[0-9.]+$" } | %{[System.Version]$_} | sort -Descending | foreach-object { $_.ToString() }
          echo "Package versions found:" $sortedPackages 
          $latestVersion = $sortedPackages[0]
          echo "Latest Version: $latestVersion"
          . ./.github/workflows/Check-References.ps1
          Check-References -Rootdirectory $Env:GITHUB_WORKSPACE -PackageName "MESL.SQLRace.API" -VersionMustContain $latestVersion

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build 
        run: dotnet build --configuration Release --no-restore
